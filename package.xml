<?xml version="1.0" encoding="UTF-8"?>
<package packagerversion="1.9.4" version="2.0" xmlns="http://pear.php.net/dtd/package-2.0" xmlns:tasks="http://pear.php.net/dtd/tasks-1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd">
 <name>immutable_cache</name>
 <channel>pecl.php.net</channel>
 <summary>immutable_cache - an shared memory cache of immutable values</summary>
 <description>immutable_cache - an shared memory cache of immutable values. Based on APCu.</description>
 <!-- The leads of the APCu project, which immutable_cache is forked from
 <lead>
  <name>Joe Watkins</name>
  <user>krakjoe</user>
  <email>krakjoe@php.net</email>
  <active>yes</active>
 </lead>
 <developer>
  <name>Anatol Belski</name>
  <user>ab</user>
  <email>ab@php.net</email>
  <active>yes</active>
 </developer>
 <lead>
  <name>Remi Collet</name>
  <user>remi</user>
  <email>remi@php.net</email>
  <active>yes</active>
 </lead>
 <lead>
  <name>Nikita Popov</name>
  <user>nikic</user>
  <email>nikic@php.net</email>
  <active>yes</active>
 </lead>
 -->
 <lead>
  <name>Tyson Andre</name>
  <user>tandre</user>
  <email>tandre@php.net</email>
  <active>yes</active>
 </lead>
 <date>2022-11-29</date>
 <version>
  <release>6.1.0</release>
  <api>6.1.0</api>
 </version>
 <stability>
  <release>stable</release>
  <api>stable</api>
 </stability>
 <license uri="http://www.php.net/license">PHP License</license>
 <notes>
- Extend minimum supported php version from php 8.0 to 7.2
- Work around bug adding '-lpthread' as a shared library dependency in php before 7.4.14. Related to https://bugs.php.net/bug.php?id=80402
- Switch default for immutable_cache.serializer to "default" (store the php arrays and strings and scalars in shared memory rather than serialization when added value is an array)
 </notes>
 <contents>
  <dir name="/">
   <dir name="tests">
    <file name="apc_001.phpt" role="test" />
    <file name="apc_002.phpt" role="test" />
    <file name="apc_003b.phpt" role="test" />
    <file name="apc_003b_legacy.phpt" role="test" />
    <file name="apc_004.phpt" role="test" />
    <file name="apc_005.phpt" role="test" />
    <file name="apc_005b.phpt" role="test" />
    <file name="apc_005c.phpt" role="test" />
    <file name="apc_006.phpt" role="test" />
    <file name="apc_006_php73.phpt" role="test" />
    <file name="apc_006_php81.phpt" role="test" />
    <file name="apc_010.phpt" role="test" />
    <file name="apc_011.phpt" role="test" />
    <file name="apc_013_exists.phpt" role="test" />
    <file name="apc_014_store_ref.phpt" role="test" />
    <file name="apc_015.phpt" role="test" />
    <file name="apc_016.phpt" role="test" />
    <file name="apc_017.phpt" role="test" />
    <file name="apc_023.phpt" role="test" />
    <file name="apc_024.phpt" role="test" />
    <file name="apc_025.phpt" role="test" />
    <file name="apc54_014.phpt" role="test" />
    <file name="apc54_018.phpt" role="test" />
    <file name="apc_disabled.phpt" role="test" />
    <file name="apcu_fetch_empty_array.phpt" role="test" />
    <file name="apcu_fetch_empty_array_reference.phpt" role="test" />
    <file name="apc_store_array_int_keys.phpt" role="test" />
    <file name="apc_store_array_with_refs.phpt" role="test" />
    <file name="apc_store_reference.phpt" role="test" />
    <file name="apc_store_reference_php8.phpt" role="test" />
    <file name="apc_store_string_reuse.phpt" role="test" />
    <file name="apcu_sma_info.phpt" role="test" />
    <file name="bug63224.phpt" role="test" />
    <file name="bug76145.phpt" role="test" />
    <file name="get_included_files_inc1.inc" role="test" />
    <file name="get_included_files_inc2.inc" role="test" />
    <file name="get_included_files_inc3.inc" role="test" />
    <file name="ghbug176.phpt" role="test" />
    <file name="ghbug168.phpt" role="test" />
    <file name="ghbug185.phpt" role="test" />
    <file name="ghbug247.phpt" role="test" />
    <file name="ghbug248.phpt" role="test" />
    <file name="ghbug335-fail.phpt" role="test" />
    <file name="immutable_cache_intern_strings.phpt" role="test" />
    <file name="immutable_cache_immutable_arrays.phpt" role="test" />
    <file name="immutable_cache_immutable_arrays2.phpt" role="test" />
    <file name="iterator_001.phpt" role="test" />
    <file name="iterator_002.phpt" role="test" />
    <file name="iterator_003.phpt" role="test" />
    <file name="iterator_004.phpt" role="test" />
    <file name="iterator_006.phpt" role="test" />
    <file name="iterator_007.phpt" role="test" />
    <file name="iterator_008.phpt" role="test" />
    <file name="iterator_009.phpt" role="test" />
    <file name="iterator_011.phpt" role="test" />
    <file name="not_enough_shm.phpt" role="test" />
    <file name="server_skipif.inc" role="test" />
    <file name="server_test.inc" role="test" />
    <file name="skipif.inc" role="test" />
    <file name="typed_prop.phpt" role="test" />
    <file name="data/abc.data" role="test" />
    <file name="bad/abc.data" role="test" />
   </dir>
   <file name="immutable_cache_api.h" role="src" />
   <file name="immutable_cache_arginfo.h" role="src" />
   <file name="php_immutable_cache.stub.php" role="src" />
   <file name="php_immutable_cache_arginfo.h" role="src" />
   <file name="php_immutable_cache_legacy_arginfo.h" role="src" />
   <file name="immutable_cache.c" role="src" />
   <file name="immutable_cache_cache.c" role="src" />
   <file name="immutable_cache_cache.h" role="src" />
   <file name="immutable_cache_globals.h" role="src" />
   <file name="immutable_cache.h" role="src" />
   <file name="immutable_cache_iterator.c" role="src" />
   <file name="immutable_cache_iterator.h" role="src" />
   <file name="immutable_cache_iterator.stub.php" role="src" />
   <file name="immutable_cache_iterator_arginfo.h" role="src" />
   <file name="immutable_cache_iterator_legacy_arginfo.h" role="src" />
   <file name="immutable_cache_lock.c" role="src" />
   <file name="immutable_cache_lock.h" role="src" />
   <file name="immutable_cache_mmap.c" role="src" />
   <file name="immutable_cache_mmap.h" role="src" />
   <file name="immutable_cache_mutex.c" role="src" />
   <file name="immutable_cache_mutex.h" role="src" />
   <file name="immutable_cache_persist.c" role="src" />
   <file name="immutable_cache.php" role="src" />
   <file name="immutable_cache_php.h" role="src" />
   <file name="immutable_cache_php74_shim.h" role="src" />
   <file name="immutable_cache_shm.c" role="src" />
   <file name="immutable_cache_shm.h" role="src" />
   <file name="immutable_cache_signal.c" role="src" />
   <file name="immutable_cache_signal.h" role="src" />
   <file name="immutable_cache_sma.c" role="src" />
   <file name="immutable_cache_sma.h" role="src" />
   <file name="immutable_cache_stack.c" role="src" />
   <file name="immutable_cache_stack.h" role="src" />
   <file name="immutable_cache_strings.h" role="src" />
   <file name="immutable_cache_time.c" role="src" />
   <file name="immutable_cache_time.h" role="src" />
   <file name="immutable_cache_windows_srwlock_kernel.c" role="src" />
   <file name="immutable_cache_windows_srwlock_kernel.h" role="src" />
   <file name="immutable_cache_serializer.h" role="src" />
   <file name="config.m4" role="src" />
   <file name="config.w32" role="src" />
   <file name="LICENSE" role="doc" />
   <file name="Makefile.frag" role="src" />
   <file name="NOTICE" role="doc" />
   <file name="php_immutable_cache.c" role="src" />
   <file name="php_immutable_cache.h" role="src" />
   <file name="README.md" role="doc" />
   <file name="TECHNOTES.txt" role="doc" />
  </dir>
 </contents>
 <dependencies>
  <required>
   <php>
    <min>7.2.0</min>
   </php>
   <pearinstaller>
    <min>1.10</min>
   </pearinstaller>
  </required>
 </dependencies>
 <providesextension>immutable_cache</providesextension>
 <extsrcrelease>
  <configureoption name="enable-immutable-cache-debug" default="no" prompt="Enable internal debugging in immutable_cache" />
 </extsrcrelease>
 <changelog>
  <release>
   <date>2022-11-13</date>
   <version>
    <release>6.0.2</release>
    <api>6.0.2</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
- Add support for `immutable_cache.protect_memory`, which will make the shared memory read-only (similar to https://www.php.net/manual/en/opcache.configuration.php#ini.opcache.protect-memory)

  This will slow down applications that do a lot of writes.

  However, as a side effect of how it's implemented (disables statistics tracking such as number of cache hits/misses, access times, etc), read-heavy applications would see a moderate performance boost.
- Fix conflicts with other extensions when using shmget and IPC_PRIVATE on Windows. Work around bugs in php-src/TSRM/tsrm_win32.c's polyfill of shmget.
   </notes>
  </release>
  <release>
   <date>2022-11-13</date>
   <version>
    <release>6.0.2beta4</release>
    <api>6.0.2beta4</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
- Make extension version consistent with GitHub release version of 6.0.2
- Add fine-grained locking with 16 different read locks based on key_hash % 16 to allow for higher parallel throughput
  (A single pthread rwlock seemed to have a read bottleneck of around 10 million operations per second total on a laptop due to memory contention)
- Align and pad shared memory locks to common sizes for cache lines (64 bytes) to fit in a cache line. https://lwn.net/Articles/531254/
- Convert doubles to integers in immutable_cache_cache_info() and other debugging functions.
- Raise the default immutable_cache.shm_size from '32M' to '256M'.
- Fix detection of negative format bit flags in ImmutableCacheIterator
   </notes>
  </release>
  <release>
   <date>2022-11-12</date>
   <version>
    <release>6.0.0beta3</release>
    <api>6.0.0beta3</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
- Add support for immutable_cache.serializer=igbinary when configured with './configure --enable-immutable-cache-igbinary' and igbinary is installed and enabled.
- Remove unsupported $ttl from parameter list of immutable_cache_add and returned arrays.
- Remove debugging statement that printed to stderr when a value was already persisted.
- Update documentation
- Reuse strings in array keys and cache entry key when persisting to shared memory.
- Speed up persisting large numbers of values by rotating pointers to avoid zend_array hash table collisions.
- Fix the way that the pthread linker flag was added.
   </notes>
  </release>
  <release>
   <date>2022-11-06</date>
   <version>
    <release>6.0.0beta2</release>
    <api>6.0.0beta2</api>
   </version>
   <stability>
    <release>beta</release>
    <api>beta</api>
   </stability>
   <license uri="http://www.php.net/license">PHP License</license>
   <notes>
- Initial release tag on https://github.com/TysonAndre/immutable_cache-pecl
- Create immutable_cache based on APCu 5.1.23dev
- Change the extension name, all ini settings, header/source files and symbols
  to avoid conflicting with the installation of APCu on all OSes
- Drop support for PHP &lt; 8.0 in the initial release (earlier PHP versions not tested yet)
   </notes>
  </release>
 </changelog>
</package>
